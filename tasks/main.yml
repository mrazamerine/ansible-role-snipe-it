# Snipe-IT tasks - main.yml
---
- name: create snipe-it user
  user:
    name: snipe-it
    comment: "Snipe-IT User"
    group: www-data
    shell: /bin/bash
    system: yes

- name: install required packages - snipe-it
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - curl
    - php7.0-bcmath
    - php7.0-cli
    - php7.0-curl
    - php7.0-fpm
    - php7.0-ldap
    - php7.0-mysql
    - php7.0-mcrypt
    - php7.0-gd
    - php7.0-xml
    - php7.0-mbstring
    - php7.0-zip
    - patch
    - unzip

- name: create snipe-it mysql database
  mysql_db:
    db: snipeit
    state: present
    encoding: utf8
    collation: utf8_bin

- name: create snipe-it mysql user
  mysql_user:
    name: mysql_snipeit_user
    password: "{{ mysql_snipeit_password }}"
    priv: 'snipeit.*:ALL,GRANT'
    state: present

- name: clone snipe-it github repo
  git:
    repo: 'https://github.com/snipe/snipe-it'
    dest: /srv/snipe-it
    clone: yes
    update: yes
  notify:
    - restart nginx
    - restart php7
  register: clone_snipeit_repo

- name: configure snipe-it git repo
  git_config:
    name: core.fileMode
    repo: /srv/snipe-it
    scope: local
    value: false

- name: set ownership and persmisons of snipe-it directory
  file:
    path: /srv/snipe-it
    state: directory
    owner: snipe-it
    group: www-data
    mode: 0770
    recurse: yes
  when: clone_snipeit_repo|changed

- name: run php upgrade
  command: php /srv/snipe-it/upgrade.php
  when: clone_snipeit_repo|changed

- name: include nginx tasks
  include: nginx.yml

- name: install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  args:
    creates: /usr/local/bin/composer

- name: install dependencies with composer
  composer:
    command: install
    working_dir: /srv/snipe-it
    no_dev: yes
    prefer_source: yes
  become_user: snipe-it

- name: apply snipe-it .env template
  template:
    src: env.j2
    dest: /srv/snipe-it/.env
    owner: snipe-it
    group: www-data
    mode: 0770
  notify:
    - restart nginx
    - restart php7

- name: ensure web services are running
  service:
    name: "{{ item }}"
    state: started
  with_items:
    - nginx
    - php7.0-fpm